{"version":3,"sources":["../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","../node_modules/react-bootstrap/esm/ElementChildren.js","components/SettingsBar/SettingsBarInternal.tsx"],"names":["ButtonGroup","React","forwardRef","props","ref","bsPrefix","size","toggle","vertical","className","_props$as","as","Component","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","displayName","defaultProps","role","noop","ToggleButton","_ref","children","name","checked","type","onChange","value","disabled","inputRef","_useState","useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","Button","active","autoComplete","onFocus","onBlur","ToggleButtonGroup","_useUncontrolled","useUncontrolled","controlledProps","getValues","concat","invariant","func","index","Children","map","child","isValidElement","values","_child$props","childVal","childOnChange","cloneElement","indexOf","chainFunction","inputVal","event","isActive","filter","n","handleToggle","CalculationRadio","setCalcMethod","parseInt","settings","calculationSettings","calculationMethod","setState","state","this","Row","style","paddingLeft","paddingRight","paddingBottom","Col","sm","variant","PureComponent","SettingsBarInternal","titles","forms","graphs","distance","calculations","launchAngle","numericalMethod","colors","handleGraphChange","id","numValue","undefined","parseFloat","generateGraphForm","rangeAxisFormStyle","formLabel","paddingTop","formGroup","marginBottom","i","ParameterForm","controlId","key","handleValueChange","newValue","String","append","labelWidth","ariaLabel","handleCalculationChange","generateLaunchAngleForm","initialValue","handleNumericalMethodChange","timeStep","generateNumericalMethodForm","singleForm","handleRoundingChange","format","rounding","handleShortNameChange","shortNames","handleShowLineChange","showLine","handleColorChange","numValues","updateColors","generateColorForms","counter","maxHeight","rowGroup","rowLabel","row","form","label","display","formControl","maxWidth","inputGroup","Container","padding","onlabel","offlabel","onstyle","offstyle"],"mappings":"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","file":"static/js/3.aaf4e6ee.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useState, useCallback } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: null,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio'\n};\nvar ToggleButtonGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if (React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import React from 'react';\r\nimport {ToggleButtonGroup, ToggleButton, Container, Col, Row} from 'react-bootstrap';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\r\n\r\nimport * as T from '../commonTypes';\r\nimport {ParameterForm} from '../ParameterForm';\r\n\r\nclass CalculationRadio extends React.PureComponent<{settings: T.settingsT}, {value: number}>{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {value: this.props.settings.calculationSettings.calculationMethod};\r\n    }\r\n    private setCalcMethod = (event) => {\r\n        const value = parseInt(event.target.value);\r\n        this.props.settings.calculationSettings.calculationMethod = value;\r\n        this.setState({value: parseInt(event.target.value)});\r\n    }\r\n    render(){\r\n        const setCalcMethod = this.setCalcMethod;\r\n        return(\r\n            <Row style={{paddingLeft: '1rem', paddingRight: '1rem', paddingBottom: '.5rem'}}>\r\n                <Col sm=\"1\"/>\r\n                <Col>\r\n            <ToggleButtonGroup toggle vertical type=\"radio\" name=\"radio\" value={this.state.value}>\r\n                <ToggleButton onChange={setCalcMethod} type=\"radio\" value={0} variant=\"secondary\">\r\n                Adams-Bashforth 5\r\n                </ToggleButton>\r\n                <ToggleButton onChange={setCalcMethod} type=\"radio\" value={1} variant=\"secondary\">\r\n                Forward Euler\r\n                </ToggleButton>\r\n                <ToggleButton onChange={setCalcMethod} type=\"radio\" value={2} variant=\"secondary\">\r\n                Runge-Kutta 2\r\n                </ToggleButton>\r\n                <ToggleButton onChange={setCalcMethod} type=\"radio\" value={3} variant=\"secondary\">\r\n                Runge-Kutta 4\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n            </Col>\r\n            <Col sm=\"1\"/>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\ninterface settingsBarProps{\r\n    settings: T.settingsT, updateColors: Function\r\n}\r\nexport class SettingsBarInternal extends React.PureComponent<settingsBarProps>{\r\n    titles : T.collapseTitlesT = [\"Hide: \", \"Show: \"]; // 0: Hide 1: Show\r\n    private forms = {\r\n        graphs : {\r\n            distance : [['min', 'Minimum'], ['max', 'Maximum'], ['stepSize', 'Step Size']]\r\n        },\r\n        calculations : {\r\n            launchAngle : [['min', 'Minimum', '°'], ['max', 'Maximum', '°'], ['precision', 'Increment', '°']],\r\n            numericalMethod : [['timeStep', 'Time Step', 's']]\r\n        },\r\n        colors : [\r\n            ['Hue', [['hueMin', 'Min'], ['hueMax', 'Max']]],\r\n\t\t\t['Chroma', [['chromaMin', 'Min'], ['chromaMax', 'Max']]],\r\n\t\t\t['Light', [['lightMin', 'Min'], ['lightMax', 'Max']]],\r\n        ]\r\n    }\r\n    //Graphs\r\n    private handleGraphChange = (value: string, id: string) => {\r\n        var numValue : number | undefined;\r\n        if(value === ''){numValue = undefined;} \r\n        else{numValue = parseFloat(value);}\r\n        this.props.settings.distance[id] = numValue; \r\n    }\r\n    private generateGraphForm = () => {\r\n        const rangeAxisFormStyle = {formLabel: {paddingTop: 0, paddingBottom: 0}, formGroup: {marginBottom: \".5rem\"}};\r\n        return this.forms.graphs.distance.map((value, i) => {\r\n            return(\r\n                <ParameterForm \r\n                controlId={value[0]} key={i} type=\"number\" \r\n                handleValueChange={this.handleGraphChange} \r\n                newValue={String(this.props.settings.distance[value[0]])} \r\n                append=\"m\" \r\n                labelWidth={3} style={rangeAxisFormStyle} ariaLabel={value[1]}>\r\n                    {value[1]}\r\n                </ParameterForm>\r\n            );\r\n        });\r\n    }\r\n    //Calculations\r\n    private handleCalculationChange = (value: string, id: string) : void | string => {\r\n        const calculationSettings = this.props.settings.calculationSettings;\r\n        if(value === ''){return 'error';}\r\n        const numValue = parseFloat(value);\r\n        calculationSettings.launchAngle[id] = numValue;\r\n    }\r\n    private generateLaunchAngleForm = () => {\r\n        const forms = this.forms, calculationSettings = this.props.settings.calculationSettings;\r\n        return forms.calculations.launchAngle.map((value, i) => {\r\n            const initialValue = calculationSettings.launchAngle[value[0]];\r\n            return(\r\n                <ParameterForm \r\n                controlId={value[0]} key={i} type=\"number\" \r\n                newValue={String(initialValue)} \r\n                handleValueChange={this.handleCalculationChange} \r\n                labelWidth={3} append={value[2]} ariaLabel={value[1]}>\r\n                    {value[1]}\r\n                </ParameterForm>\r\n            );\r\n        });\r\n    }\r\n    private handleNumericalMethodChange = (value: string, id: string) : void | string => {\r\n        const calculationSettings = this.props.settings.calculationSettings;\r\n        if(value === ''){return 'error';}\r\n        const numValue = parseFloat(value);\r\n        if(id === 'timeStep'){\r\n            if(numValue <= 0){return 'error';}\r\n            calculationSettings.timeStep = numValue;\r\n        }\r\n    }\r\n    private generateNumericalMethodForm = () => {\r\n        const forms = this.forms;\r\n        const calculationSettings = this.props.settings.calculationSettings;\r\n        const singleForm = (value, i) => {\r\n            const initialValue = calculationSettings[value[0]];\r\n            return(\r\n                <ParameterForm newValue={String(initialValue)} controlId={value[0]} key={i} ariaLabel={value[1]}\r\n                type=\"number\" handleValueChange={this.handleNumericalMethodChange} labelWidth={3} append={value[2]}>\r\n                    {value[1]}\r\n                </ParameterForm>\r\n            );\r\n        }\r\n        const run = () => forms.calculations.numericalMethod.map(singleForm); return run();\r\n    }\r\n    //Format\r\n    private handleRoundingChange = (value: string, id: string) : void | string => {\r\n        let numValue : number | null = parseInt(value);\r\n        if(numValue < 0){return 'error';} if(value === ''){numValue = null;}\r\n        this.props.settings.format.rounding = numValue; \r\n    } \r\n    private handleShortNameChange = (checked) => {this.props.settings.format.shortNames = checked;}\r\n    private handleShowLineChange = (checked) => {\r\n        //this.props.settings.format.showLine = event.target.checked;\r\n        this.props.settings.format.showLine = checked;\r\n        //console.log(event);\r\n    }\r\n    //----Color\r\n    private handleColorChange = (value: string, id: string) : void | string => {\r\n        if(value === ''){return 'error';}\r\n        const numValues = parseFloat(value);\r\n        //if(numValues > 1 || numValues < 0){return 'error';}\r\n        this.props.settings.format.colors[id] = numValues;\r\n        this.props.updateColors();\r\n    }\r\n    private generateColorForms = () : JSX.Element => {\r\n        const typeWidth = 3, rowHeight = '3rem'; let counter = 0;\r\n        const addForm = () => {\r\n            return this.forms.colors.map((rowGroup : any) => {\r\n                const rowLabel = rowGroup[0], row = rowGroup[1];\r\n                return (\r\n                    <Row style={{maxHeight: rowHeight}} key={counter++}>\r\n                        <Col sm={typeWidth} className=\"no-lr-padding\" style={{maxHeight: rowHeight}}>\r\n                            {rowLabel}</Col>\r\n                    {row.map((form) => {\r\n                        const id = form[0], label = form[1];\r\n                        return(\r\n                            <Col className=\"no-lr-padding\" style={{maxHeight: rowHeight}} key={counter++}>\r\n                            <ParameterForm\r\n                                controlId={id} ariaLabel={`${label} ${rowLabel}`} type=\"number\" \r\n                                newValue={String(this.props.settings.format.colors[id])} \r\n                                handleValueChange={this.handleColorChange} \r\n                                labelWidth={0}\r\n                                style={{\r\n                                    formLabel: {display: \"inline-block\"},\r\n                                    formControl: {maxWidth: '6rem', display: \"inline-block\"},\r\n                                    inputGroup: {display: \"inline-block\"},\r\n                                    formGroup: {display: \"inline-block\", },\r\n                                }}></ParameterForm></Col>\r\n                        );\r\n                    })}\r\n                    </Row>\r\n                );\r\n            });\r\n        }\r\n        const run = () => {\r\n            return (<>\r\n                <Row style={{maxHeight: rowHeight}}>\r\n                    <Col sm={typeWidth} className=\"no-lr-padding\" style={{maxHeight: rowHeight}}/>\r\n                    <Col className=\"no-lr-padding\" style={{maxHeight: rowHeight}}>Minimum</Col>\r\n                    <Col className=\"no-lr-padding\" style={{maxHeight: rowHeight}}>Maximum</Col>\r\n                </Row>\r\n                {addForm()}\r\n            </>)\r\n        }\r\n        return run();\r\n    }\r\n    render(){\r\n        const settings = this.props.settings, format = settings.format;\r\n        return(\r\n    <Container style={{maxWidth: '100%'}}>\r\n        <Row>\r\n            <Col sm=\"6\" style={{padding: 0}}>\r\n                <h3>Graphs</h3>\r\n                <Row>\r\n                    <Col style={{paddingRight: 0}}>\r\n                        <h4>Line</h4>\r\n                        <Row>\r\n                            <Col sm=\"1\"/>\r\n                            <Col>\r\n                                <BootstrapSwitchButton style='switch-toggle'\r\n                                    onlabel='Show Line' offlabel='Show Point' onstyle='success' offstyle='danger'\r\n                                    onChange={this.handleShowLineChange} checked={format.showLine}\r\n                                />\r\n                            </Col>\r\n                            <Col sm=\"1\"/>  \r\n                        </Row>\r\n                        <hr/><h4>Range Axis</h4>\r\n                        {this.generateGraphForm()}\r\n                    </Col>\r\n                    <Col style={{padding: 0}}>\r\n                        <h4>Labeling</h4>\r\n                        <Row>\r\n                        <Col sm=\"1\"/>\r\n                            <Col>\r\n                                <BootstrapSwitchButton style='switch-toggle'\r\n                                    onlabel='Short Names' offlabel='Long Names' onstyle='success' offstyle='danger'\r\n                                    onChange={this.handleShortNameChange} checked={format.shortNames}\r\n                                />\r\n                            </Col>\r\n                        <Col sm=\"1\"/>\r\n                        </Row>\r\n                        <ParameterForm \r\n                            controlId=\"rounding\" ariaLabel=\"Tooltip Rounding\" type=\"number\" \r\n                            newValue={String(format.rounding)}\r\n                            handleValueChange={this.handleRoundingChange} \r\n                            labelWidth={3} append=\"dp\">\r\n                            Tooltip Rounding\r\n                        </ParameterForm>\r\n                        <hr/><h4>Color Generation</h4>\r\n                        {this.generateColorForms()}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col style={{padding: 0}}>\r\n                <h3>Calculations</h3>\r\n                <Row>\r\n                    <Col style={{padding: 0}}>\r\n                        <h4>Launch Angle</h4>\r\n                        {this.generateLaunchAngleForm()}\r\n                    </Col>\r\n                    <Col sm=\"6\" style={{paddingRight: 0, paddingLeft: 0}}>\r\n                        <h4>Numerical Analysis</h4>\r\n                        <CalculationRadio settings={settings}/>\r\n                        {this.generateNumericalMethodForm()}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SettingsBarInternal;"],"sourceRoot":""}
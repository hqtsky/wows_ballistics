{"version":3,"sources":["DefaultForms.tsx","ShellForms.tsx","App.js","serviceWorker.js","index.js"],"names":["DefaultForm","props","form","React","createRef","state","options","handleChange","event","stopPropagation","handleValueChange","target","value","controlId","updateOptions","newOptions","setState","Form","Group","className","Label","column","sm","this","label","Col","Control","as","placeholder","onChange","ref","map","i","key","current","Component","dataURL","fetchJson","onSucess","fetch","then","response","ok","Error","json","catch","error","console","fetchJsonData","data","DefaultShips","defaultForms","Object","seal","version","nation","shipType","ship","artillery","shellType","queriedData","changeForm","id","queryNation","queryType","queryShip","queryArtillery","queryShellType","sendData","updateForm","queryVersion","dataSorted","reverse","previousValue","previousValues","a","sorted","keys","sort","b","shipName","shipInfo","includes","push","input","sendDefault","entries","k","v","ParameterForm","updateValue","newValue","type","ShellParameters","nameForm","handleNameChange","name","formLabels","kv","updateValueTemp","ShellForms","parameters","defaults","values","caliber","muzzleVelocity","dragCoefficient","mass","krupp","fusetime","threshold","normalization","ra0","ra1","HESAP","parseFloat","getDefaultData","bulletDiametr","bulletSpeed","bulletAirDrag","bulletMass","bulletKrupp","bulletDetonator","bulletDetonatorThreshold","bulletCapNormalizeMaxAngle","bulletRicochetAt","bulletAlwaysRicochetAt","alphaPiercingHE","alphaPiercingCS","updateShells","index","Dropdown","Toggle","variant","Menu","Item","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f3039970.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nclass DefaultForm extends React.Component\r\n<{handleValueChange: Function, controlId: string, label : string, }> {\r\n\tform = React.createRef<HTMLSelectElement>()\r\n\tstate = {options: []};\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {options: []};\r\n\t\tthis.form = React.createRef();\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.props.handleValueChange(event.target.value, this.props.controlId);\r\n\t}\r\n\r\n\tupdateOptions = (newOptions) => {\r\n\t\tthis.setState((state) => {\r\n\t\t\treturn {options: newOptions};\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label column sm=\"6\">{this.props.label}</Form.Label>\r\n\t\t\t\t<Col sm=\"2\">\r\n\t\t\t\t\t<Form.Control as=\"select\" placeholder=\"\" \r\n\t\t\t\t\tonChange={this.handleChange} ref={this.form}>\r\n\t\t\t\t\t\t{this.state.options.map((value ,i) => {return (<option key={i}>{value}</option>);})}\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Col>\r\n\t\t\t</Form.Group>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n\t\tthis.props.handleValueChange(this.form!.current!.value, this.props.controlId);\r\n\t}\r\n}\r\n\r\nconst dataURL = \"https://jcw780.github.io/wows_ballistics/static/data/\"\r\n\r\nfunction fetchJson(target, onSucess){\r\n    fetch(target)\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(onSucess)\r\n        .catch((error) => {\r\n            console.error('There has been a problem with your fetch operation:', error);\r\n        }\r\n    );\r\n}\r\n\r\nfunction fetchJsonData(target){\r\n    return fetch(target)\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then((data) => {return data;})\r\n        .catch((error) => {\r\n            console.error('There has been a problem with your fetch operation:', error);\r\n        }\r\n    );\r\n}\r\n\r\nexport{DefaultForm};\r\n\r\ninterface defaultFormType{\r\n\tversion: [string, string, React.RefObject<DefaultForm>, number];\r\n\tnation: [string, string, React.RefObject<DefaultForm>, number];\r\n\tshipType: [string, string, React.RefObject<DefaultForm>, number];\r\n\tship: [string, string, React.RefObject<DefaultForm>, number];\r\n\tartillery: [string, string, React.RefObject<DefaultForm>, number];\r\n\tshellType: [string, string, React.RefObject<DefaultForm>, number];\r\n}\r\n\r\nclass DefaultShips extends React.Component\r\n<{sendDefault: Function, }> {\r\n\tdefaultForms : defaultFormType = Object.seal({\r\n\t\tversion:   ['Version'   , '', React.createRef<DefaultForm>(), 0],\r\n\t\tnation:    ['Nation'    , '', React.createRef<DefaultForm>(), 0], \r\n\t\tshipType:  ['Type'      , '', React.createRef<DefaultForm>(), 0], \r\n\t\tship:      ['Ship'      , '', React.createRef<DefaultForm>(), 0], \r\n\t\tartillery: ['Artillery' , '', React.createRef<DefaultForm>(), 0], \r\n\t\tshellType: ['Shell Type', '', React.createRef<DefaultForm>(), 0],\r\n\t})\r\n\tqueriedData = {}\r\n\tchangeForm = (value, id) => {\r\n\t\tthis.defaultForms[id][1] = value;\r\n\t\tconst queryIndex = this.defaultForms[id][3];\r\n\t\tswitch(queryIndex){\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.queryNation();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.queryType();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.queryShip();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.queryArtillery();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.queryShellType();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tthis.sendData();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tupdateForm = (target, options) => {\r\n\t\tthis.defaultForms[target][2].current.updateOptions(options);\r\n\t}\r\n\tqueryVersion = () => {\r\n\t\tconst updateForm = this.updateForm;\r\n\t\tfetchJson(dataURL + \"versions.json\", function(data){\r\n\t\t\tvar dataSorted = data.reverse();\r\n\t\t\tupdateForm('version', dataSorted);\r\n\t\t});\r\n\t}\r\n\tqueryNation = () => {\r\n\t\tconst updateForm = this.updateForm;\r\n\t\tconst previousValue = this.defaultForms.version[1];\r\n\t\tfetchJson(dataURL + previousValue\r\n\t\t\t+ \"/nations.json\", function (data) {\r\n\t\t\tupdateForm('nation', data);\r\n\t\t});\r\n\t}\r\n\tqueryType = () => {\r\n\t\tconst updateForm = this.updateForm;\r\n\t\tconst previousValues = [this.defaultForms.version[1], this.defaultForms.nation[1]];\r\n\t\tfetchJson(dataURL + previousValues[0] + \"/\" + previousValues[1] + \"/shiptypes.json\",\r\n\t\tfunction (data) {\r\n\t\t\tupdateForm('shipType', data);\r\n\t\t});\r\n\t}\r\n\tqueryShip = async function() {\r\n\t\tconst previousValues = [this.defaultForms.version[1], this.defaultForms.nation[1], this.defaultForms.shipType[1]];\r\n\t\tconst data = await fetchJsonData(\r\n\t\t\tdataURL + previousValues[0] + \"/\" + previousValues[1] + \"/\" + previousValues[1] + \"_\" + previousValues[2] + \".json\");\r\n\t\tthis.queriedData = data;\r\n\t\tvar sorted = Object.keys(data);\r\n\t\tsorted.sort(function(a, b){return data[a]['Tier'] - data[b]['Tier']});\r\n\t\tthis.updateForm('ship', sorted);\r\n\t}\r\n\tqueryArtillery = () => {\r\n\t\tconst shipName : string = this.defaultForms.ship[1];\r\n\t\tconst shipInfo = this.queriedData[shipName];\r\n\t\tvar options: string[] = [];\r\n\t\tObject.keys(shipInfo).map(function(key : string) : void{\r\n\t\t\tif(key.includes('Artillery')){\r\n\t\t\t\toptions.push(key);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.updateForm('artillery', options);\r\n\t}\r\n\tqueryShellType = () => {\r\n\t\tconst input = this.queriedData[this.defaultForms.ship[1]][this.defaultForms.artillery[1]];\r\n\t\tthis.updateForm('shellType', Object.keys(input));\r\n\t}\r\n\tsendData = () => {\r\n\t\tthis.props.sendDefault(\r\n\t\t\tthis.queriedData[this.defaultForms.ship[1]][this.defaultForms.artillery[1]][this.defaultForms.shellType[1]],\r\n\t\t\tthis.defaultForms.ship[1]\r\n\t\t);\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Form>\r\n\t\t\t\t{Object.entries(this.defaultForms).map( ([k, v], i) => {\r\n\t\t\t\t\tthis.defaultForms[k][3] = i;\r\n\t\t\t\t\treturn (<DefaultForm label={v[0]} key={i} controlId={k}\r\n\t\t\t\t\thandleValueChange={this.changeForm} ref={v[2]}> </DefaultForm>);\r\n\t\t\t\t})}\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DefaultShips;","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DefaultShips from 'DefaultForms'\r\n\r\n\r\nclass ParameterForm extends React.Component\r\n<{newValue: any, controlId: string, handleValueChange: Function,\r\ntype: string, label: string}>{\r\n\tstate = {value: \"\"};\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {value: this.props.newValue};\r\n\t}\r\n\thandleChange = (event) => {\r\n\t\tthis.props.handleValueChange(event.target.value, this.props.controlId);\r\n\t}\r\n\tupdateValue = (newValue) => {\r\n\t\tthis.setState((state) => {\r\n\t\t\treturn {value: newValue};\r\n\t\t});\r\n\t}\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label column sm=\"6\">{this.props.label}</Form.Label>\r\n\t\t\t\t<Col sm=\"2\">\r\n\t\t\t\t\t<Form.Control type={this.props.type} placeholder={this.state.value} \r\n\t\t\t\t\tonChange={this.handleChange}/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Form.Group>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass ShellParameters extends React.Component<{handleValueChange: any, handleNameChange: any,\r\n\tformLabels : any}>{\r\n\tnameForm = React.createRef<ParameterForm>()\r\n\r\n\thandleValueChange = (value, k) => {\r\n\t\tthis.props.handleValueChange(value, k);\r\n\t}\r\n\thandleNameChange = (event : any) => {\r\n\t\tthis.props.handleNameChange(event.target.value);\r\n\t}\r\n\tupdateShells(name : string) {\r\n\t\tObject.entries(this.props.formLabels).map(function (kv : any): void{\r\n\t\t\tconst value = kv[1]; \r\n\t\t\tvalue[2].current.updateValue(value[1]);\r\n\t\t});\r\n\t\tconst updateValueTemp = this.nameForm.current!.updateValue;\r\n\t\tupdateValueTemp(name);\r\n\t}\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Form>\r\n\t\t\t\t<ParameterForm label=\"Ship Label\" controlId='shipName'\r\n\t\t\t\t\t\thandleValueChange={this.handleValueChange}\r\n\t\t\t\t\t\ttype=\"text\" newValue=\"\"\r\n\t\t\t\t\t\tref={this.nameForm}></ParameterForm>\r\n\t\t\t\t{Object.entries(this.props.formLabels).map((kv : any, i) => {\r\n\t\t\t\t\tconst key: string = kv[0];\r\n\t\t\t\t\tconst value = kv[1];\r\n\t\t\t\t\treturn (<ParameterForm label={value[0]} key={i} controlId={key}\r\n\t\t\t\t\thandleValueChange={this.handleValueChange}\r\n\t\t\t\t\ttype=\"number\" newValue={value[1]}\r\n\t\t\t\t\tref={this.props.formLabels[key][2]}></ParameterForm>);\r\n\t\t\t\t})}\t\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass ShellForms extends React.Component<{index: string | number}> {\r\n\tparameters = React.createRef<ShellParameters>()\r\n\tdefaults = React.createRef<DefaultShips>()\r\n\tvalues = Object.seal({\r\n\t\tcaliber: ['Caliber (m)', 0, React.createRef()], \r\n\t\tmuzzleVelocity: ['Muzzle Velocity', 0, React.createRef()], \r\n\t\tdragCoefficient: ['Drag Coefficient', 0, React.createRef()],\r\n\t\tmass: ['Mass (kg)', 0, React.createRef()], \r\n\t\tkrupp: ['Krupp', 0, React.createRef()], \r\n\t\tfusetime: ['Fusetime (s)', 0, React.createRef()], \r\n\t\tthreshold: ['Fusing Threshold (mm)', 0, React.createRef()], \r\n\t\tnormalization: ['Normalization (°)', 0, React.createRef()], \r\n\t\tra0: ['Start Ricochet (°)', 0, React.createRef()], \r\n\t\tra1: ['Always Ricochet (°)', 0, React.createRef()], \r\n\t\tHESAP: ['HE/SAP penetration (mm)', 0, React.createRef()],\r\n\t})\r\n\tname = ''\r\n\r\n\thandleValueChange = (value : string, k : string) => {\r\n\t\tthis.values[k][1] = parseFloat(value);\r\n\t}\r\n\thandleNameChange = (value) => {\r\n\t\t//this.values.name = value;\r\n\t}\r\n\tgetDefaultData = (data, name) => {\r\n\t\tthis.values.caliber[1] = data.bulletDiametr;\r\n\t\tthis.values.muzzleVelocity[1] = data.bulletSpeed;\r\n\t\tthis.values.dragCoefficient[1] = data.bulletAirDrag;\r\n\t\tthis.values.mass[1] = data.bulletMass;\r\n\t\tthis.values.krupp[1] = data.bulletKrupp;\r\n\t\tthis.values.fusetime[1] = data.bulletDetonator;\r\n\t\tthis.values.threshold[1] = data.bulletDetonatorThreshold;\r\n\t\tthis.values.normalization[1] = data.bulletCapNormalizeMaxAngle;\r\n\t\tthis.values.ra0[1] = data.bulletRicochetAt;\r\n\t\tthis.values.ra1[1] = data.bulletAlwaysRicochetAt;\r\n\t\tthis.values.HESAP[1] = data.alphaPiercingHE;\r\n\r\n\t\tif(data.alphaPiercingCS > this.values.HESAP[1]){\r\n\t\t\tthis.values.HESAP[1] = data.alphaPiercingCS;\r\n\t\t}\r\n\t\tif(this.parameters.current){\r\n\t\t\tthis.parameters.current!.updateShells(name);\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Col sm='4'>\r\n\t\t\t\t<h4>Ship {this.props.index}</h4>\r\n\t\t\t\t<DefaultShips sendDefault={this.getDefaultData} ref={this.defaults}/>\r\n\t\t\t\t<Dropdown>\r\n\t\t\t\t\t<Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n\t\t\t\t\tShow Detailed Parameters\r\n\t\t\t\t\t</Dropdown.Toggle>\r\n\r\n\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t<Dropdown.Item>\r\n                            <Col sm=\"12\">\r\n                            <ShellParameters handleValueChange={this.handleValueChange}\r\n                                    handleNameChange={this.handleNameChange}\r\n                                    formLabels={this.values} ref={this.parameters}/>\r\n                            </Col>\r\n\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t</Dropdown>\r\n\t\t\t</Col>\r\n\t\t);\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.defaults.current!.queryVersion();\r\n\t}\r\n}\r\n\r\nexport default ShellForms;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ShellForms from './ShellForms.tsx'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className='rows'>\n\t\t\t\t<div className='row'><ShellForms index=\"1\"/></div>\n\t\t\t\t<div className='row'><ShellForms index=\"2\"/></div>\n\t\t\t\t<div className='row'><ShellForms index=\"3\"/></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
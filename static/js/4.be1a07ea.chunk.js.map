{"version":3,"sources":["components/ShellForms/Types.tsx","components/ShellForms/ShellParameters.tsx"],"names":["labelI","GeneralTooltip","React","lazy","ShellParameters","nameForm","createRef","downloadRef","handleValueChange","value","k","props","updateDownloadJSON","formData","selectedData","clonedeep","FormData","colors","url","URL","createObjectURL","Blob","JSON","stringify","type","current","update","name","addForms","singleForm","i","key","S","ParameterForm","controlId","ref","newValue","String","append","unit","style","inputGroup","width","ariaLabel","fallback","title","content","description","Object","entries","formLabels","map","this","updateItem","updateValue","forEach","Form","Row","Col","sm","DownloadButton","label","updateData","PureComponent"],"mappings":"+KAEYA,E,yGAAAA,O,eAAAA,I,eAAAA,I,aAAAA,I,8BAAAA,M,yBCMNC,EAAiBC,IAAMC,MAAK,kBAAM,2CAG3BC,EAAb,4MACCC,SAAWH,IAAMI,YADlB,EAECC,YAAcL,IAAMI,YAFrB,EAGCE,kBAAoB,SAACC,EAAOC,GAAO,EAAKC,MAAMH,kBAAkBC,EAAOC,IAHxE,EAYCE,mBAAqB,WACpB,IAAMC,EAAW,EAAKF,MAAME,SAAUC,EAAeC,IAAUC,iBAAkBF,EAAaG,OACxF,IAAMC,EAAMC,IAAIC,gBAAgB,IAAIC,KAAK,CAACC,KAAKC,UAAUT,IAAgB,CAACU,KAAM,6BAChF,EAAKjB,YAAYkB,QAASC,OAAOR,EAAKL,EAASc,KAAO,UAf9D,EAiBCC,SAAW,WACV,IAAMjB,EAAQ,EAAKA,MACbkB,EAAa,SAAC,EAAqCC,GAAO,IAAD,mBAA1CC,EAA0C,KAArCtB,EAAqC,KACxDkB,EAAOlB,EAAMuB,EAASL,MAC5B,OACA,kBAACM,EAAA,EAAD,CAAeF,IAAKD,EAAGI,UAAWH,EAAKI,IAAK1B,EAAMuB,EAASG,KAC1DC,SAAUC,OAAO1B,EAAME,SAASkB,IAChCvB,kBAAmB,EAAKA,kBACxBgB,KAAK,SAASc,OAAQ7B,EAAMuB,EAASO,MACrCC,MAAO,CAACC,WAAW,CAACC,MAAO,QAASC,UAAWhB,GAC/B,kBAAC,WAAD,CAAUiB,SAAU,4CAChB,kBAAC3C,EAAD,CAAgB4C,MAAOlB,EAAMmB,QAASrC,EAAMuB,EAASe,cACjD,6BAAMpB,OAKoC,OAAlDqB,OAAOC,QAAQtC,EAAMuC,YAAYC,IAAItB,IAlCzD,6DAKE,IAAMlB,EAAQyC,KAAKzC,MACb0C,EAAa,SAAC,GAA+C,IAAD,mBAA7CtB,EAA6C,UAC3DC,EAASG,KAAKV,QAAS6B,YAAY3C,EAAME,SAASkB,KAGzD,OADkBiB,OAAOC,QAAQtC,EAAMuC,YAAYK,QAAQF,KAT7D,+BAqCE,OACF,oCACC,kBAACG,EAAA,EAAD,KACEJ,KAAKxB,YAEP,kBAAC6B,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACR,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACR,kBAACC,EAAA,EAAD,CAAgBC,MAAM,eAAeC,WAAYV,KAAKxC,mBAAoBuB,IAAKiB,KAAK7C,YAAaiC,MAAO,CAACE,MAAO,WAEhH,kBAACgB,EAAA,EAAD,CAAKC,GAAG,YA/CV,GAAqCzD,IAAM6D,eAwD5B3D","file":"static/js/4.be1a07ea.chunk.js","sourcesContent":["import ParameterForm from '../ParameterForm';\r\n\r\nexport enum labelI {name, unit, ref, description}\r\nexport type labelT = [string, string,React.RefObject<ParameterForm>, string | JSX.Element];\r\nexport interface formTemplate<K>{\r\n\tcaliber: K, muzzleVelocity: K, dragCoefficient: K, mass: K,\r\n\tkrupp: K, fusetime: K, threshold: K, normalization: K, \r\n\tra0: K, ra1: K, HESAP: K,\r\n}\r\nexport type formLabelsT = formTemplate<labelT>;\r\nexport type formsT = keyof(formLabelsT);\r\n\r\nexport interface formDataT extends formTemplate<number>{name: string, colors: string[]}","import React, {Suspense} from 'react';\r\nimport {Form, Col, Row} from 'react-bootstrap';\r\nimport clonedeep from 'lodash.clonedeep';\r\n\r\nimport * as S from './Types';\r\nimport {ParameterForm} from '../ParameterForm';\r\nimport DownloadButton from '../DownloadButton';\r\n\r\nconst GeneralTooltip = React.lazy(() => import('../Tooltips'));\r\n\r\ninterface shellParametersProps {handleValueChange: any, formLabels : S.formLabelsT, formData: S.formDataT}\r\nexport class ShellParameters extends React.PureComponent<shellParametersProps>{\r\n\tnameForm = React.createRef<ParameterForm>();\r\n\tdownloadRef = React.createRef<DownloadButton>();\r\n\thandleValueChange = (value, k) => {this.props.handleValueChange(value, k);}\r\n\tupdateShells() {\r\n\t\tconst props = this.props;\r\n\t\tconst updateItem = ([key, value] : [S.formsT, S.labelT]): void => {\r\n\t\t\tvalue[S.labelI.ref].current!.updateValue(props.formData[key]);\r\n\t\t}\r\n\t\tconst run = () => Object.entries(props.formLabels).forEach(updateItem);\r\n\t\treturn run();\r\n\t}\r\n\tupdateDownloadJSON = () => {\r\n\t\tconst formData = this.props.formData, selectedData = clonedeep(FormData); delete selectedData.colors;\r\n        const url = URL.createObjectURL(new Blob([JSON.stringify(selectedData)], {type: 'text/json;charset=utf-8'}));\r\n        this.downloadRef.current!.update(url, formData.name + '.json');\r\n\t}\r\n\taddForms = () => {\r\n\t\tconst props = this.props;\r\n\t\tconst singleForm = ([key, value] : [S.formsT, S.labelT], i) => {\r\n\t\t\tconst name = value[S.labelI.name];\r\n\t\t\treturn (\r\n\t\t\t<ParameterForm key={i} controlId={key} ref={value[S.labelI.ref]}\r\n\t\t\t\tnewValue={String(props.formData[key])}\r\n\t\t\t\thandleValueChange={this.handleValueChange} \r\n\t\t\t\ttype=\"number\" append={value[S.labelI.unit]}\r\n\t\t\t\tstyle={{inputGroup:{width: \"50%\"}}} ariaLabel={name}>\r\n                    <Suspense fallback={<div>Loading...</div>}>\r\n                        <GeneralTooltip title={name} content={value[S.labelI.description]}>\r\n                            <div>{name}</div>\r\n                        </GeneralTooltip>\r\n                    </Suspense>\r\n\t\t\t</ParameterForm>);\r\n\t\t}\r\n\t\tconst run = () => Object.entries(props.formLabels).map(singleForm); return run();\r\n\t}\r\n\trender() {\r\n\t\treturn(\r\n<>\r\n\t<Form>\r\n\t\t{this.addForms()}\t\r\n\t</Form>\r\n\t<Row>\r\n\t\t<Col sm=\"3\"/>\r\n\t\t<Col sm=\"6\">\r\n\t\t<DownloadButton label=\"Download Raw\" updateData={this.updateDownloadJSON} ref={this.downloadRef} style={{width: \"100%\"}}/>\r\n\t\t</Col>\r\n\t\t<Col sm=\"3\"/>\r\n\t</Row>\r\n</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport type ShellParametersT = ShellParameters;\r\n\r\nexport default ShellParameters;"],"sourceRoot":""}
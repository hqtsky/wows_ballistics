{"version":3,"sources":["../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/ToggleButton.js","../node_modules/react-bootstrap/esm/ToggleButtonGroup.js","../node_modules/react-bootstrap/esm/ElementChildren.js","components/SettingsBar/SettingsBarInternal.tsx"],"names":["ButtonGroup","React","forwardRef","props","ref","bsPrefix","size","toggle","vertical","className","_props$as","as","Component","rest","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","baseClass","createElement","_extends","classNames","displayName","defaultProps","role","noop","ToggleButton","_ref","children","name","checked","type","onChange","value","disabled","inputRef","_useState","useState","focused","setFocused","handleFocus","useCallback","e","target","tagName","handleBlur","Button","active","autoComplete","onFocus","onBlur","ToggleButtonGroup","_useUncontrolled","useUncontrolled","controlledProps","getValues","concat","invariant","func","index","Children","map","child","isValidElement","values","_child$props","childVal","childOnChange","cloneElement","indexOf","chainFunction","inputVal","event","isActive","filter","n","handleToggle","CalculationRadio","setCalcMethod","parseInt","settings","calculationSettings","calculationMethod","setState","state","this","Row","style","paddingLeft","paddingRight","paddingBottom","Col","sm","variant","PureComponent","SettingsBarInternal","titles","forms","graphs","distance","calculations","launchAngle","numericalMethod","colors","line","format","defaultFormStyle","formLabel","display","padding","formControl","minWidth","maxWidth","inputGroup","inputGroupAppend","formGroup","marginBottom","generateForms","i","key","ParameterForm","controlId","handleValueChange","newValue","String","append","labelWidth","ariaLabel","onlineChange","id","parseFloat","generateLineForms","handleGraphChange","numValue","undefined","generateGraphForm","handleCalculationChange","generateLaunchAngleForm","handleNumericalMethodChange","timeStep","generateNumericalMethodForm","handleRoundingChange","rounding","generateFormatForms","onShortNameChange","shortNames","onShowLineChange","showLine","handleColorChange","numValues","updateColors","generateColorFormsInternal","counter","maxHeight","rowGroup","rowLabel","row","form","label","generateColorForms","Container","onlabel","offlabel","onstyle","offstyle"],"mappings":"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","file":"static/js/3.9e6feb53.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      className = props.className,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      rest = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useState, useCallback } from 'react';\nimport Button from './Button';\n\nvar noop = function noop() {};\n\nvar ToggleButton = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      name = _ref.name,\n      className = _ref.className,\n      checked = _ref.checked,\n      type = _ref.type,\n      onChange = _ref.onChange,\n      value = _ref.value,\n      disabled = _ref.disabled,\n      inputRef = _ref.inputRef,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"name\", \"className\", \"checked\", \"type\", \"onChange\", \"value\", \"disabled\", \"inputRef\"]);\n\n  var _useState = useState(false),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleFocus = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(true);\n  }, []);\n  var handleBlur = useCallback(function (e) {\n    if (e.target.tagName === 'INPUT') setFocused(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, focused && 'focus', disabled && 'disabled'),\n    type: null,\n    active: !!checked,\n    as: \"label\"\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    value: value,\n    ref: inputRef,\n    autoComplete: \"off\",\n    checked: !!checked,\n    disabled: !!disabled,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onChange: onChange || noop\n  }), children);\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport invariant from 'invariant';\nimport { useUncontrolled } from 'uncontrollable';\nimport chainFunction from './createChainedFunction';\nimport { map } from './ElementChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar defaultProps = {\n  type: 'radio'\n};\nvar ToggleButtonGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    value: 'onChange'\n  }),\n      children = _useUncontrolled.children,\n      type = _useUncontrolled.type,\n      name = _useUncontrolled.name,\n      value = _useUncontrolled.value,\n      onChange = _useUncontrolled.onChange,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"children\", \"type\", \"name\", \"value\", \"onChange\"]);\n\n  var getValues = function getValues() {\n    return value == null ? [] : [].concat(value);\n  };\n\n  var handleToggle = function handleToggle(inputVal, event) {\n    var values = getValues();\n    var isActive = values.indexOf(inputVal) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) onChange(inputVal, event);\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== inputVal;\n      }), event);\n    } else {\n      onChange([].concat(values, [inputVal]), event);\n    }\n  };\n\n  !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n  return /*#__PURE__*/React.createElement(ButtonGroup, _extends({}, controlledProps, {\n    ref: ref,\n    toggle: true\n  }), map(children, function (child) {\n    var values = getValues();\n    var _child$props = child.props,\n        childVal = _child$props.value,\n        childOnChange = _child$props.onChange;\n\n    var handler = function handler(e) {\n      return handleToggle(childVal, e);\n    };\n\n    return React.cloneElement(child, {\n      type: type,\n      name: child.name || name,\n      checked: values.indexOf(childVal) !== -1,\n      onChange: chainFunction(childOnChange, handler)\n    });\n  }));\n});\nToggleButtonGroup.defaultProps = defaultProps;\nToggleButtonGroup.Button = ToggleButton;\nexport default ToggleButtonGroup;","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if (React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import React from 'react';\r\nimport {ToggleButtonGroup, ToggleButton, Container, Col, Row} from 'react-bootstrap';\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\r\n\r\nimport * as T from '../commonTypes';\r\nimport {ParameterForm} from '../UtilityComponents/ParameterForm';\r\n\r\nclass CalculationRadio extends React.PureComponent<{settings: T.settingsT}, {value: number}>{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {value: this.props.settings.calculationSettings.calculationMethod};\r\n    }\r\n    private setCalcMethod = (event) => {\r\n        const value = parseInt(event.target.value);\r\n        this.props.settings.calculationSettings.calculationMethod = value;\r\n        this.setState({value: parseInt(event.target.value)});\r\n    }\r\n    render(){\r\n        const setCalcMethod = this.setCalcMethod;\r\n        return(\r\n            <Row style={{paddingLeft: '1rem', paddingRight: '1rem', paddingBottom: '.5rem'}}>\r\n                <Col sm=\"1\"/>\r\n                <Col>\r\n            <ToggleButtonGroup toggle vertical type=\"radio\" name=\"radio\" value={this.state.value}>\r\n                <ToggleButton onChange={setCalcMethod} type=\"radio\" value={0} variant=\"secondary\">\r\n                Adams-Bashforth 5\r\n                </ToggleButton>\r\n                <ToggleButton onChange={setCalcMethod} type=\"radio\" value={1} variant=\"secondary\">\r\n                Forward Euler\r\n                </ToggleButton>\r\n                <ToggleButton onChange={setCalcMethod} type=\"radio\" value={2} variant=\"secondary\">\r\n                Runge-Kutta 2\r\n                </ToggleButton>\r\n                <ToggleButton onChange={setCalcMethod} type=\"radio\" value={3} variant=\"secondary\">\r\n                Runge-Kutta 4\r\n                </ToggleButton>\r\n            </ToggleButtonGroup>\r\n            </Col>\r\n            <Col sm=\"1\"/>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\ninterface settingsBarProps{\r\n    settings: T.settingsT, updateColors: Function\r\n}\r\nexport class SettingsBarInternal extends React.PureComponent<settingsBarProps>{\r\n    titles : T.collapseTitlesT = [\"Hide: \", \"Show: \"]; // 0: Hide 1: Show\r\n    private forms = {\r\n        graphs : {\r\n            distance : [\r\n                ['min', 'Minimum', 'm'], \r\n                ['max', 'Maximum', 'm'], \r\n                ['stepSize', 'Step Size', 'm']\r\n            ]\r\n        },\r\n        calculations : {\r\n            launchAngle : [\r\n                ['min', 'Minimum', '°'], \r\n                ['max', 'Maximum', '°'], \r\n                ['precision', 'Increment', '°']\r\n            ],\r\n            numericalMethod : [['timeStep', 'Time Step', 's']]\r\n        },\r\n        colors : [\r\n            ['Hue', [['hueMin', 'Min'], ['hueMax', 'Max']]],\r\n\t\t\t['Chroma', [['chromaMin', 'Min'], ['chromaMax', 'Max']]],\r\n\t\t\t['Light', [['lightMin', 'Min'], ['lightMax', 'Max']]],\r\n        ],\r\n        line : [\r\n            ['pointRadius', 'Draw Radius', 'px'], \r\n            ['pointHitRadius', 'Hover Radius', 'px']\r\n        ],\r\n        format : [\r\n            ['rounding', 'Tooltip Rounding', 'dp']\r\n        ]\r\n    }\r\n    private defaultFormStyle = {\r\n        formLabel: {display: \"block ruby\", padding: 0},\r\n        formControl: {minWidth: '6rem', maxWidth: '6rem', display: \"inline-flex\"},\r\n        inputGroup: {display: \"inline-flex\"},\r\n        inputGroupAppend: {display: \"inline-block\"},\r\n        formGroup: {display: \"block ruby\", marginBottom: \".5rem\" },\r\n    }\r\n    private generateForms = (forms, target, onChange, sm=4) => {\r\n        return forms.map((value, i) => {\r\n            return(\r\n                <Row key={i}>\r\n                    <Col className=\"no-lr-padding\" sm={sm}>{value[1]}</Col>\r\n                    <Col className=\"no-lr-padding\">\r\n                        <ParameterForm \r\n                        controlId={value[0]} type=\"number\" \r\n                        handleValueChange={onChange} \r\n                        newValue={String(target[value[0]])} \r\n                        append={value[2]} \r\n                        labelWidth={3} ariaLabel={value[1]}\r\n                        style={this.defaultFormStyle}>\r\n                            <></>\r\n                        </ParameterForm>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        });\r\n    }\r\n    //Line\r\n    private onlineChange = (value: string, id: string) => {\r\n        this.props.settings.line[id] = parseFloat(value);\r\n    }\r\n    private generateLineForms = () => {\r\n        return this.generateForms(\r\n            this.forms.line,\r\n            this.props.settings.line,\r\n            this.onlineChange, \r\n        );\r\n    }\r\n    //Distance Axis\r\n    private handleGraphChange = (value: string, id: string) => {\r\n        var numValue : number | undefined;\r\n        if(value === ''){numValue = undefined;} \r\n        else{numValue = parseFloat(value);}\r\n        this.props.settings.distance[id] = numValue; \r\n    }\r\n    private generateGraphForm = () => {\r\n        return this.generateForms(\r\n            this.forms.graphs.distance, \r\n            this.props.settings.distance, \r\n            this.handleGraphChange\r\n        );\r\n    }\r\n    //Calculations\r\n    private handleCalculationChange = (value: string, id: string) : void | string => {\r\n        const calculationSettings = this.props.settings.calculationSettings;\r\n        if(value === ''){return 'error';}\r\n        const numValue = parseFloat(value);\r\n        calculationSettings.launchAngle[id] = numValue;\r\n    }\r\n    private generateLaunchAngleForm = () => {\r\n        return this.generateForms(\r\n            this.forms.calculations.launchAngle, \r\n            this.props.settings.calculationSettings.launchAngle, \r\n            this.handleCalculationChange\r\n        );\r\n    }\r\n    private handleNumericalMethodChange = (value: string, id: string) : void | string => {\r\n        const calculationSettings = this.props.settings.calculationSettings;\r\n        if(value === ''){return 'error';}\r\n        const numValue = parseFloat(value);\r\n        if(id === 'timeStep'){\r\n            if(numValue <= 0){return 'error';}\r\n            calculationSettings.timeStep = numValue;\r\n        }\r\n    }\r\n    private generateNumericalMethodForm = () => {\r\n        return this.generateForms(\r\n            this.forms.calculations.numericalMethod, \r\n            this.props.settings.calculationSettings, \r\n            this.handleNumericalMethodChange\r\n        );\r\n    }\r\n\r\n    //Format\r\n    private handleRoundingChange = (value: string, id: string) : void | string => {\r\n        let numValue : number | null = parseInt(value);\r\n        if(numValue < 0){return 'error';} if(value === ''){numValue = null;}\r\n        this.props.settings.format.rounding = numValue; \r\n    } \r\n    private generateFormatForms = () => {\r\n        return this.generateForms(\r\n            this.forms.format, \r\n            this.props.settings.format, \r\n            this.handleRoundingChange\r\n        );\r\n    }\r\n\r\n    private onShortNameChange = (checked) => {this.props.settings.format.shortNames = checked;}\r\n    private onShowLineChange = (checked) => {\r\n        //this.props.settings.format.showLine = event.target.checked;\r\n        this.props.settings.line.showLine = checked;\r\n        //console.log(event);\r\n    }\r\n    //----Color\r\n    private handleColorChange = (value: string, id: string) : void | string => {\r\n        if(value === ''){return 'error';}\r\n        const numValues = parseFloat(value);\r\n        //if(numValues > 1 || numValues < 0){return 'error';}\r\n        this.props.settings.format.colors[id] = numValues;\r\n        this.props.updateColors();\r\n    }\r\n    private generateColorFormsInternal = () => {\r\n        const typeWidth = 3, rowHeight = '3rem'; let counter = 0;\r\n        const addForm = () => {\r\n            const singleRow = (rowGroup : any) => {\r\n                const rowLabel = rowGroup[0], row = rowGroup[1];\r\n                const singleForm = (form) => {\r\n                    const id = form[0], label = form[1];\r\n                    return(\r\n                        <Col className=\"no-lr-padding\" style={{maxHeight: rowHeight}} key={counter++}>\r\n                        <ParameterForm\r\n                            controlId={id} ariaLabel={`${label} ${rowLabel}`} type=\"number\" \r\n                            newValue={String(this.props.settings.format.colors[id])} \r\n                            handleValueChange={this.handleColorChange} \r\n                            labelWidth={0}\r\n                            style={{\r\n                                formLabel: {display: \"inline-block\"},\r\n                                formControl: {maxWidth: '6rem', display: \"inline-block\"},\r\n                                inputGroup: {display: \"inline-block\"},\r\n                                formGroup: {display: \"inline-block\", },\r\n                            }}></ParameterForm></Col>\r\n                    );\r\n                }\r\n                return (\r\n                    <Row style={{maxHeight: rowHeight}} key={counter++}>\r\n                        <Col sm={typeWidth} className=\"no-lr-padding\" style={{maxHeight: rowHeight}}>\r\n                            {rowLabel}\r\n                        </Col>\r\n                        {row.map(singleForm)}\r\n                    </Row>\r\n                );\r\n            }\r\n            return this.forms.colors.map(singleRow);\r\n        }\r\n        const run = () => {\r\n            return (<>\r\n                <Row style={{maxHeight: rowHeight}}>\r\n                    <Col sm={typeWidth} className=\"no-lr-padding\" style={{maxHeight: rowHeight}}/>\r\n                    <Col className=\"no-lr-padding\" style={{maxHeight: rowHeight}}>Minimum</Col>\r\n                    <Col className=\"no-lr-padding\" style={{maxHeight: rowHeight}}>Maximum</Col>\r\n                </Row>\r\n                {addForm()}\r\n            </>)\r\n        }\r\n        return run;\r\n    }\r\n    private generateColorForms = this.generateColorFormsInternal();\r\n    render(){\r\n        const settings = this.props.settings, format = settings.format;\r\n        return(\r\n    <Container style={{maxWidth: '100%'}}>\r\n        <Row>\r\n            <Col style={{padding: 0}}><h3>Graphs</h3></Col>\r\n            <Col style={{padding: 0}}><h3>Calculations</h3></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col sm=\"6\" style={{padding: 0}}>\r\n                <Row>\r\n                    <Col style={{paddingRight: 0}}>\r\n                        <h4>Line</h4>\r\n                        <Row>\r\n                            <Col sm=\"1\"/>\r\n                            <Col>\r\n                                <BootstrapSwitchButton style='switch-toggle'\r\n                                    onlabel='Show Line' offlabel='Show Point' onstyle='success' offstyle='danger'\r\n                                    onChange={this.onShowLineChange} checked={settings.line.showLine}\r\n                                />\r\n                                <h5>Point</h5>\r\n                                {this.generateLineForms()}\r\n                            </Col>\r\n                            <Col sm=\"1\"/>  \r\n                        </Row>\r\n                    </Col>\r\n                    <Col style={{padding: 0}}>\r\n                        <h4>Labeling</h4>\r\n                        <Row>\r\n                        <Col sm=\"1\"/>\r\n                            <Col>\r\n                                <BootstrapSwitchButton style='switch-toggle'\r\n                                    onlabel='Short Names' offlabel='Long Names' onstyle='success' offstyle='danger'\r\n                                    onChange={this.onShortNameChange} checked={format.shortNames}\r\n                                />\r\n                            </Col>\r\n                        <Col sm=\"1\"/>\r\n                        </Row>\r\n                        {this.generateFormatForms()}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col style={{padding: 0}}>\r\n                <Row>\r\n                    <Col style={{padding: 0}}>\r\n                        <h4>Launch Angle</h4>\r\n                        {this.generateLaunchAngleForm()}\r\n                    </Col>\r\n                    <Col sm=\"6\" style={{paddingRight: 0, paddingLeft: 0}}>\r\n                        <h4>Numerical Analysis</h4>\r\n                        <CalculationRadio settings={settings}/>\r\n                        {this.generateNumericalMethodForm()}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n        <hr/>\r\n        <Row>\r\n            <Col sm=\"6\" style={{padding: 0}}>\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Range Axis</h4>\r\n                        {this.generateGraphForm()}\r\n                    </Col>\r\n                    <Col>\r\n                        <h4>Color Generation</h4>\r\n                        {this.generateColorForms()}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col sm=\"6\" style={{padding: 0}}></Col>\r\n        </Row>\r\n    </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SettingsBarInternal;"],"sourceRoot":""}
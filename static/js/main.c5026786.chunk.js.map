{"version":3,"sources":["DefaultForms.tsx","ShellForms.tsx","TargetForms.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["DefaultForm","props","form","React","createRef","state","options","handleChange","event","stopPropagation","handleValueChange","target","value","controlId","updateOptions","newOptions","setState","Form","Group","className","Label","column","sm","this","label","Control","as","placeholder","onChange","ref","map","i","key","current","Component","dataURL","fetchJson","onSucess","fetch","then","response","ok","Error","json","catch","error","console","fetchJsonData","data","DefaultShips","defaultForms","Object","seal","version","nation","shipType","ship","artillery","shellType","queriedData","changeForm","id","queryNation","queryType","queryShip","queryArtillery","queryShellType","sendData","updateForm","queryVersion","dataSorted","reverse","previousValue","previousValues","a","sorted","keys","sort","b","shipName","shipInfo","forEach","includes","push","input","sendDefault","entries","k","v","ParameterForm","updateValue","newValue","labelWidth","type","style","width","formWidth","defaultProps","ShellParameters","nameForm","formLabels","kv","updateShells","ShellForms","parameters","defaults","values","caliber","muzzleVelocity","dragCoefficient","mass","krupp","fusetime","threshold","normalization","ra0","ra1","HESAP","name","handleNameChange","parseFloat","getDefaultData","bulletDiametr","bulletSpeed","bulletAirDrag","bulletMass","bulletKrupp","bulletDetonator","bulletDetonatorThreshold","bulletCapNormalizeMaxAngle","bulletRicochetAt","bulletAlwaysRicochetAt","alphaPiercingHE","alphaPiercingCS","deleteShip","keyProp","Modal","Dialog","Header","closeButton","onClick","Title","index","Body","Container","Col","Footer","Dropdown","Toggle","variant","Menu","Item","ShellFormsContainer","Set","addShip","listed","set","has","add","delete","Row","Array","from","Button","AngleForm","deleteElement","parseInt","padding","paddingTop","paddingRight","paddingLeft","TargetFormsContainer","angleKeys","targetData","armor","inclination","angles","addAngle","length","deleteAngle","splice","handleAngleChange","angleElements","common","toString","columnIndex","Math","floor","display","justifyContent","App","TargetForms","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c5026786.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nclass DefaultForm extends React.Component\r\n<{handleValueChange: Function, controlId: string, label : string, }> {\r\n\tform = React.createRef<HTMLSelectElement>()\r\n\tstate = {options: []};\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {options: []};\r\n\t\tthis.form = React.createRef();\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tthis.props.handleValueChange(event.target.value, this.props.controlId);\r\n\t}\r\n\r\n\tupdateOptions = (newOptions) => {\r\n\t\tthis.setState((state) => {\r\n\t\t\treturn {options: newOptions};\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<Form.Group className=\"form-inline\">\r\n\t\t\t\t<Form.Label column sm=\"3\">{this.props.label}</Form.Label>\r\n\t\t\t\t<Form.Control as=\"select\" placeholder=\"\" \r\n\t\t\t\tonChange={this.handleChange} ref={this.form}>\r\n\t\t\t\t\t{this.state.options.map((value ,i) => {return (<option key={i}>{value}</option>);})}\r\n\t\t\t\t</Form.Control>\r\n\t\t\t</Form.Group>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n\t\tthis.props.handleValueChange(this.form!.current!.value, this.props.controlId);\r\n\t}\r\n}\r\n\r\nconst dataURL = \"https://jcw780.github.io/wows_ballistics/static/data/\"\r\n\r\nfunction fetchJson(target, onSucess){\r\n    fetch(target)\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(onSucess)\r\n        .catch((error) => {\r\n            console.error('There has been a problem with your fetch operation:', error);\r\n        }\r\n    );\r\n}\r\n\r\nfunction fetchJsonData(target){\r\n    return fetch(target)\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then((data) => {return data;})\r\n        .catch((error) => {\r\n            console.error('There has been a problem with your fetch operation:', error);\r\n        }\r\n    );\r\n}\r\n\r\nexport{DefaultForm};\r\n\r\ninterface defaultFormType{\r\n\tversion: [string, string, React.RefObject<DefaultForm>, number];\r\n\tnation: [string, string, React.RefObject<DefaultForm>, number];\r\n\tshipType: [string, string, React.RefObject<DefaultForm>, number];\r\n\tship: [string, string, React.RefObject<DefaultForm>, number];\r\n\tartillery: [string, string, React.RefObject<DefaultForm>, number];\r\n\tshellType: [string, string, React.RefObject<DefaultForm>, number];\r\n}\r\n\r\nclass DefaultShips extends React.Component\r\n<{sendDefault: Function, }> {\r\n\tdefaultForms : defaultFormType = Object.seal({\r\n\t\tversion:   ['Version'   , '', React.createRef<DefaultForm>(), 0],\r\n\t\tnation:    ['Nation'    , '', React.createRef<DefaultForm>(), 0], \r\n\t\tshipType:  ['Type'      , '', React.createRef<DefaultForm>(), 0], \r\n\t\tship:      ['Ship'      , '', React.createRef<DefaultForm>(), 0], \r\n\t\tartillery: ['Artillery' , '', React.createRef<DefaultForm>(), 0], \r\n\t\tshellType: ['Shell Type', '', React.createRef<DefaultForm>(), 0],\r\n\t})\r\n\tqueriedData = {}\r\n\tchangeForm = (value, id) => {\r\n\t\tthis.defaultForms[id][1] = value;\r\n\t\tconst queryIndex = this.defaultForms[id][3];\r\n\t\tswitch(queryIndex){\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.queryNation();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.queryType();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.queryShip();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.queryArtillery();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tthis.queryShellType();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tthis.sendData();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tupdateForm = (target, options) => {\r\n\t\tthis.defaultForms[target][2].current.updateOptions(options);\r\n\t}\r\n\tqueryVersion = () => {\r\n\t\tconst updateForm = this.updateForm;\r\n\t\tfetchJson(dataURL + \"versions.json\", function(data){\r\n\t\t\tvar dataSorted = data.reverse();\r\n\t\t\tupdateForm('version', dataSorted);\r\n\t\t});\r\n\t}\r\n\tqueryNation = () => {\r\n\t\tconst updateForm = this.updateForm;\r\n\t\tconst previousValue = this.defaultForms.version[1];\r\n\t\tfetchJson(dataURL + previousValue\r\n\t\t\t+ \"/nations.json\", function (data) {\r\n\t\t\tupdateForm('nation', data);\r\n\t\t});\r\n\t}\r\n\tqueryType = () => {\r\n\t\tconst updateForm = this.updateForm;\r\n\t\tconst previousValues = [this.defaultForms.version[1], this.defaultForms.nation[1]];\r\n\t\tfetchJson(dataURL + previousValues[0] + \"/\" + previousValues[1] + \"/shiptypes.json\",\r\n\t\tfunction (data) {\r\n\t\t\tupdateForm('shipType', data);\r\n\t\t});\r\n\t}\r\n\tqueryShip = async function() {\r\n\t\tconst previousValues = [this.defaultForms.version[1], this.defaultForms.nation[1], this.defaultForms.shipType[1]];\r\n\t\tconst data = await fetchJsonData(\r\n\t\t\tdataURL + previousValues[0] + \"/\" + previousValues[1] + \"/\" + previousValues[1] + \"_\" + previousValues[2] + \".json\");\r\n\t\tthis.queriedData = data;\r\n\t\tvar sorted = Object.keys(data);\r\n\t\tsorted.sort(function(a, b){return data[a]['Tier'] - data[b]['Tier']});\r\n\t\tthis.updateForm('ship', sorted);\r\n\t}\r\n\tqueryArtillery = () => {\r\n\t\tconst shipName : string = this.defaultForms.ship[1];\r\n\t\tconst shipInfo = this.queriedData[shipName];\r\n\t\tvar options: string[] = [];\r\n\t\tObject.keys(shipInfo).forEach((key : string) : void => {\r\n\t\t\tif(key.includes('Artillery')){\r\n\t\t\t\toptions.push(key);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.updateForm('artillery', options);\r\n\t}\r\n\tqueryShellType = () => {\r\n\t\tconst input = this.queriedData[this.defaultForms.ship[1]][this.defaultForms.artillery[1]];\r\n\t\tthis.updateForm('shellType', Object.keys(input));\r\n\t}\r\n\tsendData = () => {\r\n\t\tthis.props.sendDefault(\r\n\t\t\tthis.queriedData[this.defaultForms.ship[1]][this.defaultForms.artillery[1]][this.defaultForms.shellType[1]],\r\n\t\t\tthis.defaultForms.ship[1]\r\n\t\t);\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Form>\r\n\t\t\t\t{Object.entries(this.defaultForms).map( ([k, v], i) => {\r\n\t\t\t\t\tthis.defaultForms[k][3] = i;\r\n\t\t\t\t\treturn (<DefaultForm label={v[0]} key={i} controlId={k}\r\n\t\t\t\t\thandleValueChange={this.changeForm} ref={v[2]}> </DefaultForm>);\r\n\t\t\t\t})}\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DefaultShips;","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Container from 'react-bootstrap/Container';\r\nimport DefaultShips from 'DefaultForms'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\ninterface parameterFormProps {\r\n\tnewValue: any, controlId: string, handleValueChange: Function,\r\n\ttype: string, label: string, \r\n\tlabelWidth: number, formWidth: string, placeholder: string\r\n}\r\nclass ParameterForm extends React.Component<parameterFormProps>{\r\n\tpublic static defaultProps = {\r\n\t\tlabelWidth: 3, formWidth: \"\", placeholder: \"\"\r\n\t}\r\n\tstate = {value: \"\"};\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {value: this.props.newValue};\r\n\t}\r\n\thandleChange = (event) => {\r\n\t\tthis.updateValue(event.target.value);\r\n\t\tthis.props.handleValueChange(event.target.value, this.props.controlId);\r\n\t}\r\n\tupdateValue = (newValue) => {\r\n\t\tthis.setState((state) => {\r\n\t\t\treturn {value: newValue};\r\n\t\t});\r\n\t}\r\n\trender(){\r\n\t\treturn (\r\n<Form.Group className=\"form-inline\">\r\n\t<Form.Label column sm={this.props.labelWidth}>{this.props.label}</Form.Label>\r\n\t<Form.Control type={this.props.type} value={this.state.value} \r\n\tstyle={{width: this.props.formWidth}} \r\n\tplaceholder={this.props.placeholder} onChange={this.handleChange}/>\r\n</Form.Group>\r\n\t\t);\r\n\t}\r\n}\r\nexport {ParameterForm};\r\n\r\ninterface shellParametersProps {\r\n\thandleValueChange: any,\r\n\tformLabels : any\r\n}\r\nclass ShellParameters extends React.Component<shellParametersProps>{\r\n\tnameForm = React.createRef<ParameterForm>()\r\n\r\n\thandleValueChange = (value, k) => {\r\n\t\tthis.props.handleValueChange(value, k);\r\n\t}\r\n\tupdateShells() {\r\n\t\tObject.entries(this.props.formLabels).forEach((kv : any): void => {\r\n\t\t\tconst value = kv[1];\r\n\t\t\tvalue[2].current.updateValue(value[1]);\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Form>\r\n\t\t\t\t{Object.entries(this.props.formLabels).map((kv : any, i) => {\r\n\t\t\t\t\tconst key: string = kv[0];\r\n\t\t\t\t\tconst value = kv[1];\r\n\t\t\t\t\treturn (<ParameterForm label={value[0]} key={i} controlId={key}\r\n\t\t\t\t\thandleValueChange={this.handleValueChange}\r\n\t\t\t\t\ttype=\"number\" newValue={value[1]}\r\n\t\t\t\t\tref={this.props.formLabels[key][2]}></ParameterForm>);\r\n\t\t\t\t})}\t\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n\tcomponentDidUpdate(){\r\n\t\tthis.updateShells();\r\n\t}\r\n}\r\n\r\ninterface shellFormsProps{\r\n\tindex: number, keyProp: number, deleteShip : Function\r\n}\r\nclass ShellForms extends React.Component<shellFormsProps> {\r\n\tparameters = React.createRef<ShellParameters>()\r\n\tdefaults = React.createRef<DefaultShips>()\r\n\tvalues = Object.seal({\r\n\t\tcaliber: ['Caliber (m)', 0, React.createRef()], \r\n\t\tmuzzleVelocity: ['Muzzle Velocity', 0, React.createRef()], \r\n\t\tdragCoefficient: ['Drag Coefficient', 0, React.createRef()],\r\n\t\tmass: ['Mass (kg)', 0, React.createRef()], \r\n\t\tkrupp: ['Krupp', 0, React.createRef()], \r\n\t\tfusetime: ['Fusetime (s)', 0, React.createRef()], \r\n\t\tthreshold: ['Fusing Threshold (mm)', 0, React.createRef()], \r\n\t\tnormalization: ['Normalization (°)', 0, React.createRef()], \r\n\t\tra0: ['Start Ricochet (°)', 0, React.createRef()], \r\n\t\tra1: ['Always Ricochet (°)', 0, React.createRef()], \r\n\t\tHESAP: ['HE/SAP penetration (mm)', 0, React.createRef()],\r\n\t})\r\n\tname = ''\r\n\tnameForm = React.createRef<ParameterForm>()\r\n\thandleNameChange = (value, id) => {\r\n\t\tthis.name = value;\r\n\t}\r\n\r\n\thandleValueChange = (value : string, k : string) => {\r\n\t\tthis.values[k][1] = parseFloat(value);\r\n\t}\r\n\tgetDefaultData = (data, name) => {\r\n\t\tthis.values.caliber[1] = data.bulletDiametr;\r\n\t\tthis.values.muzzleVelocity[1] = data.bulletSpeed;\r\n\t\tthis.values.dragCoefficient[1] = data.bulletAirDrag;\r\n\t\tthis.values.mass[1] = data.bulletMass;\r\n\t\tthis.values.krupp[1] = data.bulletKrupp;\r\n\t\tthis.values.fusetime[1] = data.bulletDetonator;\r\n\t\tthis.values.threshold[1] = data.bulletDetonatorThreshold;\r\n\t\tthis.values.normalization[1] = data.bulletCapNormalizeMaxAngle;\r\n\t\tthis.values.ra0[1] = data.bulletRicochetAt;\r\n\t\tthis.values.ra1[1] = data.bulletAlwaysRicochetAt;\r\n\t\tthis.values.HESAP[1] = data.alphaPiercingHE;\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.nameForm.current!.updateValue(name);\r\n\r\n\t\tif(data.alphaPiercingCS > this.values.HESAP[1]){\r\n\t\t\tthis.values.HESAP[1] = data.alphaPiercingCS;\r\n\t\t}\r\n\t\tif(this.parameters.current){\r\n\t\t\tthis.parameters.current!.updateShells();\r\n\t\t}\r\n\r\n\t}\r\n\tdeleteShip = () => {\r\n\t\tthis.props.deleteShip(this.props.keyProp);\r\n\t}\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Modal.Dialog>\r\n\t\t\t\t<Modal.Header closeButton onClick={this.deleteShip}>\r\n\t\t\t\t\t<Modal.Title>Shell {this.props.index + 1}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t<Col sm='12'>\r\n\t\t\t\t\t\t<ParameterForm label=\"Ship Label\" controlId='shipName'\r\n\t\t\t\t\t\t\t\thandleValueChange={this.handleNameChange}\r\n\t\t\t\t\t\t\t\ttype=\"text\" newValue=\"\"\r\n\t\t\t\t\t\t\t\tref={this.nameForm}></ParameterForm>\r\n\t\t\t\t\t\t<DefaultShips sendDefault={this.getDefaultData} ref={this.defaults}/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Dropdown>\r\n\t\t\t\t\t\t<Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n\t\t\t\t\t\tShow Detailed Parameters\r\n\t\t\t\t\t\t</Dropdown.Toggle>\r\n\t\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t\t<Dropdown.Item>\r\n\t\t\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t<ShellParameters handleValueChange={this.handleValueChange}\r\n\t\t\t\t\t\t\t\t\t\tformLabels={this.values} ref={this.parameters}/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t\t</Dropdown.Item>\r\n\t\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal.Dialog>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.defaults.current!.queryVersion();\r\n\t}\r\n}\r\nexport {ShellForms};\r\n\r\nclass ShellFormsContainer extends React.Component{\r\n\tstate = {keys: new Set([0, 1])};\r\n\r\n\taddShip = () => {\r\n\t\tlet index: number = 0;\r\n\t\tlet listed: boolean = true;\r\n\t\tconst set = this.state.keys;\r\n\t\twhile(listed){\r\n\t\t\tif(set.has(index)){\r\n\t\t\t\tindex++;\r\n\t\t\t}else{\r\n\t\t\t\tlisted = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState((current) => {\r\n\t\t\tlet set = current['keys'];\r\n\t\t\treturn {keys: set.add(index)};\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteShip = (key) => {\r\n\t\tlet set = this.state.keys;\r\n\t\tset.delete(key);\r\n\t\tthis.setState((current) => {\r\n\t\t\treturn {keys: set};\r\n\t\t})\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<>\r\n\t\t\t\t<h2>Shell Selection</h2>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t{Array.from(this.state.keys).map((value, i) => {\r\n\t\t\t\t\t\treturn <ShellForms index={i} deleteShip={this.deleteShip} key={value} keyProp={value}/>;\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col/>\r\n\t\t\t\t\t<Col sm=\"6\"><Button className=\"form-control\" onClick={this.addShip}>Add Ship</Button></Col>\r\n\t\t\t\t\t<Col/>\r\n\t\t\t\t</Row>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ShellFormsContainer;","import React from 'react';\r\nimport {ParameterForm} from 'ShellForms';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\ninterface angleFormProps {\r\n    newValue: any, controlId: string, \r\n    label: string, placeholder: string, keyProp : number, \r\n    handleValueChange: Function, deleteElement : Function,\r\n}\r\nclass AngleForm extends React.Component<angleFormProps>{\r\n    public static defaultProps = {\r\n        placeholder : \"\",\r\n    }\r\n    deleteElement = () => {\r\n        this.props.deleteElement(this.props.keyProp, parseInt(this.props.controlId));\r\n    }\r\n    render(){\r\n        return (\r\n            <Modal.Dialog style={{width: '100%'}}>\r\n                <Modal.Header \r\n                style={{padding: 0, paddingTop: '0.5rem', paddingRight: '0.5rem', paddingLeft: '0.5rem'}}\r\n                closeButton onClick={this.deleteElement}>\r\n            <ParameterForm controlId={this.props.controlId} \r\n            newValue={this.props.newValue}\r\n            handleValueChange={this.props.handleValueChange} \r\n            type=\"number\" label={this.props.label}\r\n            labelWidth={4} formWidth={'50%'}/>\r\n                </Modal.Header>\r\n            </Modal.Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nclass TargetFormsContainer extends React.Component\r\n<{}, {angleKeys: Set<number>}>{\r\n    state = {angleKeys: new Set([0, 1, 2, 3])};\r\n    targetData = {\r\n        armor: 70.,\r\n        inclination: 0.,\r\n        angles: [0, 5, 10, 15],\r\n    };\r\n    addAngle = () => {\r\n\t\tlet index: number = 0;\r\n\t\tlet listed: boolean = true;\r\n\t\tconst set = this.state.angleKeys;\r\n\t\twhile(listed){\r\n\t\t\tif(set.has(index)){\r\n\t\t\t\tindex++;\r\n\t\t\t}else{\r\n\t\t\t\tlisted = false;\r\n\t\t\t}\r\n        }\r\n        this.targetData.angles.push(this.targetData.angles.length * 5);\r\n\t\tthis.setState((current) => {\r\n\t\t\tlet set = current['angleKeys'];\r\n\t\t\treturn {angleKeys: set.add(index)};\r\n        });\r\n\t}\r\n\r\n\tdeleteAngle = (key : number, index : number) => {\r\n\t\tlet set = this.state.angleKeys;\r\n        set.delete(key);\r\n        this.targetData.angles.splice(index, 1);\r\n\t\tthis.setState((current) => {\r\n\t\t\treturn {angleKeys: set};\r\n\t\t});\r\n\t}\r\n    handleChange = (value : string, id : string) => {\r\n        this.targetData[id] = parseFloat(value);\r\n    }\r\n    handleAngleChange = (value: string, id : string) => {\r\n        this.targetData.angles[parseInt(id)] = parseFloat(value);\r\n    }\r\n    render(){\r\n        let angleElements : Array<Array<JSX.Element>> = [];\r\n        const elementColumn = 2;\r\n        Array.from(this.state.angleKeys).forEach((value, i) => {\r\n            const common = \r\n                <AngleForm key={value} keyProp={value} controlId={i.toString()} \r\n                newValue={this.targetData.angles[i]} deleteElement={this.deleteAngle}\r\n                handleValueChange={this.handleAngleChange}\r\n                label={\"Angle \" + (i + 1)}/>\r\n            const columnIndex = Math.floor(i / elementColumn);\r\n            if(i % elementColumn === 0){\r\n                angleElements.push([]);\r\n            }\r\n            angleElements[columnIndex].push(common);\r\n        });\r\n        return(\r\n        <>\r\n            <h2>Target Data</h2>\r\n            <div className=\"row\" style={{display: 'flex', justifyContent: 'center'}}>\r\n            <ParameterForm controlId=\"armor\"\r\n            newValue={this.targetData.armor} \r\n            handleValueChange={this.handleChange} type=\"number\"\r\n            label=\"Armor Thickness\" labelWidth={4} />\r\n            <ParameterForm controlId=\"inclination\"\r\n            newValue={this.targetData.inclination} \r\n            handleValueChange={this.handleChange} type=\"number\"\r\n            label=\"Armor Inclination\" labelWidth={4} />\r\n            </div>\r\n            <Container>\r\n                <Row>\r\n            {angleElements.map((values, i) => {\r\n                return (\r\n                    <Col key={\"R\" + i} sm=\"3\">\r\n                        {values.map((value) => {\r\n                            return value;\r\n                        })}\r\n                    </Col>\r\n                );\r\n            })}\r\n                </Row>\r\n            </Container>\r\n            \r\n            <Row>\r\n                <Col/>\r\n                <Col sm=\"6\"><Button className=\"form-control\" onClick={this.addAngle}>Add Angle</Button></Col>\r\n                <Col/>\r\n            </Row>\r\n        </>\r\n        );\r\n    }\r\n\r\n    /*componentDidUpdate(){\r\n        console.log(this.targetData);\r\n    }*/\r\n}\r\n\r\nexport default TargetFormsContainer;","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ShellFormsContainer from 'ShellForms';\r\nimport TargetFormsContainer from 'TargetForms';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<ShellFormsContainer/>\r\n\t\t\t<TargetFormsContainer/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}